//! @file     Shaders.h
//! @author   
//! @version  
//! @date     2013/12/13
//! Copyright 2010~2011 LiCode's Union.

#pragma once

static const EGE::_chara* const cDefaultColorBlend_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"uniform\" type=\"vec4\" name=\"cBlendColor\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sPrimColor\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sBlendColor\"/>\n"
"</Declaration>\n"
"<Functions>\n"
"<Function name=\"mix_color\" scope=\"PSMain\">\n"
"<Ret precision=\"lowp\" type=\"vec4\" />\n"
"<Argument type=\"vec4\" name=\"tex_color\"/>\n"
"<Code>\n"
"<Text>\n"
"return vec4(mix(tex_color, sBlendColor, sBlendColor.w).rgb, tex_color.w);\n"
"</Text>\n"
"</Code>\n"
"</Function>\n"
"</Functions>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sPrimColor = cColor0;\n"
"sBlendColor = cBlendColor;\n"
"sUV = cTexCoords0;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Declaration>\n"
"<Precision type=\"float\">lowp</Precision>\n"
"</Declaration>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec4\" name=\"tex_color\" default_value=\"texture2D(cTexSampler0, sUV)\"/>\n"
"<ReturnOp>mix_color(tex_color)</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultDiscardTranslucence_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sPrimColor\"/>\n"
"</Declaration>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sPrimColor = cColor0;\n"
"sUV = cTexCoords0;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec4\" name=\"tex_color\" default_value=\"texture2D(cTexSampler0, sUV)\"/>\n"
"<Text>\n"
"if ( tex_color.w &lt; 1.0 )\n"
"discard;\n"
"tex_color.xyzw *= sPrimColor.zyxw;\n"
"</Text>\n"
"<ReturnOp>tex_color</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultDiscardTransparent_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sPrimColor\"/>\n"
"</Declaration>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sPrimColor = cColor0;\n"
"sUV = cTexCoords0;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec4\" name=\"tex_color\" default_value=\"texture2D(cTexSampler0, sUV)\"/>\n"
"<Text>\n"
"if ( tex_color.w == 0.0 )\n"
"discard;\n"
"tex_color.xyzw *= sPrimColor.zyxw;\n"
"</Text>\n"
"<ReturnOp>tex_color</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultDrawText_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sPrimColor\"/>\n"
"</Declaration>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sPrimColor = cColor0;\n"
"sUV = cTexCoords0;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec4\" name=\"tex_color\"/>\n"
"<Text>\n"
"tex_color.xyz = sPrimColor.zyx;\n"
"tex_color.w = (sPrimColor.w * texture2D(cTexSampler0, sUV).w);\n"
"</Text>\n"
"<ReturnOp>tex_color</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultGaussianBlur3x3_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"uniform\" type=\"vec4\" name=\"cBlurColor\"/>\n"
"<Variable qualifier=\"uniform\" type=\"vec2\" name=\"cTextureSize\"/>\n"
"<Variable qualifier=\"uniform\" type=\"float\" name=\"cBlurRate\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sTextureSize\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"float\" name=\"sBlurRate\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sBlurColor\"/>\n"
"</Declaration>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sBlurColor = cBlurColor;\n"
"sUV = cTexCoords0;\n"
"sTextureSize = cTextureSize;\n"
"sBlurRate = cBlurRate;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Declaration>\n"
"<Precision type=\"float\">lowp</Precision>\n"
"</Declaration>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec2\" name=\"new_uv\" default_value=\"\"/>\n"
"<Text>\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_1;\n"
"tmpvar_1 = texture2D (cTexSampler0, new_uv).w;\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_2;\n"
"tmpvar_2 = (tmpvar_1 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_3;\n"
"tmpvar_3 = (tmpvar_2 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_4;\n"
"tmpvar_4 = (tmpvar_3 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_5;\n"
"tmpvar_5 = (tmpvar_4 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_6;\n"
"tmpvar_6 = (tmpvar_5 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_7;\n"
"tmpvar_7 = (tmpvar_6 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_8;\n"
"tmpvar_8 = (tmpvar_7 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"vec4 tmpvar_9;\n"
"tmpvar_9.xyz = sBlurColor.xyz;\n"
"tmpvar_9.w = (((tmpvar_8 + texture2D (cTexSampler0, new_uv).w) * sBlurRate) / 16.0);\n"
"</Text>\n"
"<ReturnOp>tmpvar_9</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultGaussianBlur5x5_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"uniform\" type=\"vec4\" name=\"cBlurColor\"/>\n"
"<Variable qualifier=\"uniform\" type=\"vec2\" name=\"cTextureSize\"/>\n"
"<Variable qualifier=\"uniform\" type=\"float\" name=\"cBlurRate\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sTextureSize\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"float\" name=\"sBlurRate\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sBlurColor\"/>\n"
"</Declaration>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sBlurColor = cBlurColor;\n"
"sUV = cTexCoords0;\n"
"sTextureSize = cTextureSize;\n"
"sBlurRate = cBlurRate;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Declaration>\n"
"<Precision type=\"float\">lowp</Precision>\n"
"</Declaration>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec2\" name=\"new_uv\" default_value=\"\"/>\n"
"<Text>\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_1;\n"
"tmpvar_1 = texture2D (cTexSampler0, new_uv).w;\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_2;\n"
"tmpvar_2 = (tmpvar_1 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_3;\n"
"tmpvar_3 = (tmpvar_2 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_4;\n"
"tmpvar_4 = (tmpvar_3 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_5;\n"
"tmpvar_5 = (tmpvar_4 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_6;\n"
"tmpvar_6 = (tmpvar_5 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_7;\n"
"tmpvar_7 = (tmpvar_6 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_8;\n"
"tmpvar_8 = (tmpvar_7 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_9;\n"
"tmpvar_9 = (tmpvar_8 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_10;\n"
"tmpvar_10 = (tmpvar_9 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_11;\n"
"tmpvar_11 = (tmpvar_10 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_12;\n"
"tmpvar_12 = (tmpvar_11 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_13;\n"
"tmpvar_13 = (tmpvar_12 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_14;\n"
"tmpvar_14 = (tmpvar_13 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_15;\n"
"tmpvar_15 = (tmpvar_14 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_16;\n"
"tmpvar_16 = (tmpvar_15 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_17;\n"
"tmpvar_17 = (tmpvar_16 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_18;\n"
"tmpvar_18 = (tmpvar_17 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_19;\n"
"tmpvar_19 = (tmpvar_18 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_20;\n"
"tmpvar_20 = (tmpvar_19 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_21;\n"
"tmpvar_21 = (tmpvar_20 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_22;\n"
"tmpvar_22 = (tmpvar_21 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_23;\n"
"tmpvar_23 = (tmpvar_22 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_24;\n"
"tmpvar_24 = (tmpvar_23 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"vec4 tmpvar_25;\n"
"tmpvar_25.xyz = sBlurColor.xyz;\n"
"tmpvar_25.w = (((tmpvar_24 + texture2D (cTexSampler0, new_uv).w) * sBlurRate) / 52.0);\n"
"</Text>\n"
"<ReturnOp>tmpvar_25</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultGaussianBlur7x7_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"uniform\" type=\"vec4\" name=\"cBlurColor\"/>\n"
"<Variable qualifier=\"uniform\" type=\"vec2\" name=\"cTextureSize\"/>\n"
"<Variable qualifier=\"uniform\" type=\"float\" name=\"cBlurRate\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sTextureSize\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"float\" name=\"sBlurRate\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sBlurColor\"/>\n"
"</Declaration>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sBlurColor = cBlurColor;\n"
"sUV = cTexCoords0;\n"
"sTextureSize = cTextureSize;\n"
"sBlurRate = cBlurRate;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Declaration>\n"
"<Precision type=\"float\">lowp</Precision>\n"
"</Declaration>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec2\" name=\"new_uv\" default_value=\"\"/>\n"
"<Text>\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_1;\n"
"tmpvar_1 = texture2D (cTexSampler0, new_uv).w;\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_2;\n"
"tmpvar_2 = (tmpvar_1 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_3;\n"
"tmpvar_3 = (tmpvar_2 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_4;\n"
"tmpvar_4 = (tmpvar_3 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_5;\n"
"tmpvar_5 = (tmpvar_4 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_6;\n"
"tmpvar_6 = (tmpvar_5 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_7;\n"
"tmpvar_7 = (tmpvar_6 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_8;\n"
"tmpvar_8 = (tmpvar_7 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_9;\n"
"tmpvar_9 = (tmpvar_8 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_10;\n"
"tmpvar_10 = (tmpvar_9 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_11;\n"
"tmpvar_11 = (tmpvar_10 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_12;\n"
"tmpvar_12 = (tmpvar_11 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_13;\n"
"tmpvar_13 = (tmpvar_12 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_14;\n"
"tmpvar_14 = (tmpvar_13 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_15;\n"
"tmpvar_15 = (tmpvar_14 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_16;\n"
"tmpvar_16 = (tmpvar_15 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_17;\n"
"tmpvar_17 = (tmpvar_16 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_18;\n"
"tmpvar_18 = (tmpvar_17 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_19;\n"
"tmpvar_19 = (tmpvar_18 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_20;\n"
"tmpvar_20 = (tmpvar_19 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_21;\n"
"tmpvar_21 = (tmpvar_20 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_22;\n"
"tmpvar_22 = (tmpvar_21 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_23;\n"
"tmpvar_23 = (tmpvar_22 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_24;\n"
"tmpvar_24 = (tmpvar_23 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_25;\n"
"tmpvar_25 = (tmpvar_24 + (texture2D (cTexSampler0, new_uv).w * 16.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_26;\n"
"tmpvar_26 = (tmpvar_25 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_27;\n"
"tmpvar_27 = (tmpvar_26 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_28;\n"
"tmpvar_28 = (tmpvar_27 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_29;\n"
"tmpvar_29 = (tmpvar_28 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_30;\n"
"tmpvar_30 = (tmpvar_29 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_31;\n"
"tmpvar_31 = (tmpvar_30 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_32;\n"
"tmpvar_32 = (tmpvar_31 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_33;\n"
"tmpvar_33 = (tmpvar_32 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_34;\n"
"tmpvar_34 = (tmpvar_33 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_35;\n"
"tmpvar_35 = (tmpvar_34 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_36;\n"
"tmpvar_36 = (tmpvar_35 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_37;\n"
"tmpvar_37 = (tmpvar_36 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_38;\n"
"tmpvar_38 = (tmpvar_37 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_39;\n"
"tmpvar_39 = (tmpvar_38 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_40;\n"
"tmpvar_40 = (tmpvar_39 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_41;\n"
"tmpvar_41 = (tmpvar_40 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_42;\n"
"tmpvar_42 = (tmpvar_41 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_43;\n"
"tmpvar_43 = (tmpvar_42 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_44;\n"
"tmpvar_44 = (tmpvar_43 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_45;\n"
"tmpvar_45 = (tmpvar_44 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_46;\n"
"tmpvar_46 = (tmpvar_45 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_47;\n"
"tmpvar_47 = (tmpvar_46 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_48;\n"
"tmpvar_48 = (tmpvar_47 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"vec4 tmpvar_49;\n"
"tmpvar_49.xyz = sBlurColor.xyz;\n"
"tmpvar_49.w = (((tmpvar_48 + texture2D (cTexSampler0, new_uv).w) * sBlurRate) / 128.0);\n"
"</Text>\n"
"<ReturnOp>tmpvar_49</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultGaussianBlur9x9_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"uniform\" type=\"vec4\" name=\"cBlurColor\"/>\n"
"<Variable qualifier=\"uniform\" type=\"vec2\" name=\"cTextureSize\"/>\n"
"<Variable qualifier=\"uniform\" type=\"float\" name=\"cBlurRate\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sTextureSize\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"float\" name=\"sBlurRate\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sBlurColor\"/>\n"
"</Declaration>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sBlurColor = cBlurColor;\n"
"sUV = cTexCoords0;\n"
"sTextureSize = cTextureSize;\n"
"sBlurRate = cBlurRate;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Declaration>\n"
"<Precision type=\"float\">lowp</Precision>\n"
"</Declaration>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec2\" name=\"new_uv\" default_value=\"\"/>\n"
"<Text>\n"
"new_uv.x = (sUV.x + (-4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-4.0 / sTextureSize.y));\n"
"float tmpvar_1;\n"
"tmpvar_1 = texture2D (cTexSampler0, new_uv).w;\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-4.0 / sTextureSize.y));\n"
"float tmpvar_2;\n"
"tmpvar_2 = (tmpvar_1 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-4.0 / sTextureSize.y));\n"
"float tmpvar_3;\n"
"tmpvar_3 = (tmpvar_2 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-4.0 / sTextureSize.y));\n"
"float tmpvar_4;\n"
"tmpvar_4 = (tmpvar_3 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-4.0 / sTextureSize.y));\n"
"float tmpvar_5;\n"
"tmpvar_5 = (tmpvar_4 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (-4.0 / sTextureSize.y));\n"
"float tmpvar_6;\n"
"tmpvar_6 = (tmpvar_5 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-4.0 / sTextureSize.y));\n"
"float tmpvar_7;\n"
"tmpvar_7 = (tmpvar_6 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-4.0 / sTextureSize.y));\n"
"float tmpvar_8;\n"
"tmpvar_8 = (tmpvar_7 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-4.0 / sTextureSize.y));\n"
"float tmpvar_9;\n"
"tmpvar_9 = (tmpvar_8 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_10;\n"
"tmpvar_10 = (tmpvar_9 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_11;\n"
"tmpvar_11 = (tmpvar_10 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_12;\n"
"tmpvar_12 = (tmpvar_11 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_13;\n"
"tmpvar_13 = (tmpvar_12 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_14;\n"
"tmpvar_14 = (tmpvar_13 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_15;\n"
"tmpvar_15 = (tmpvar_14 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_16;\n"
"tmpvar_16 = (tmpvar_15 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_17;\n"
"tmpvar_17 = (tmpvar_16 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-3.0 / sTextureSize.y));\n"
"float tmpvar_18;\n"
"tmpvar_18 = (tmpvar_17 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_19;\n"
"tmpvar_19 = (tmpvar_18 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_20;\n"
"tmpvar_20 = (tmpvar_19 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_21;\n"
"tmpvar_21 = (tmpvar_20 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_22;\n"
"tmpvar_22 = (tmpvar_21 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_23;\n"
"tmpvar_23 = (tmpvar_22 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_24;\n"
"tmpvar_24 = (tmpvar_23 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_25;\n"
"tmpvar_25 = (tmpvar_24 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_26;\n"
"tmpvar_26 = (tmpvar_25 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-2.0 / sTextureSize.y));\n"
"float tmpvar_27;\n"
"tmpvar_27 = (tmpvar_26 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_28;\n"
"tmpvar_28 = (tmpvar_27 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_29;\n"
"tmpvar_29 = (tmpvar_28 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_30;\n"
"tmpvar_30 = (tmpvar_29 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_31;\n"
"tmpvar_31 = (tmpvar_30 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_32;\n"
"tmpvar_32 = (tmpvar_31 + (texture2D (cTexSampler0, new_uv).w * 16.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_33;\n"
"tmpvar_33 = (tmpvar_32 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_34;\n"
"tmpvar_34 = (tmpvar_33 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_35;\n"
"tmpvar_35 = (tmpvar_34 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (-1.0 / sTextureSize.y));\n"
"float tmpvar_36;\n"
"tmpvar_36 = (tmpvar_35 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_37;\n"
"tmpvar_37 = (tmpvar_36 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_38;\n"
"tmpvar_38 = (tmpvar_37 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_39;\n"
"tmpvar_39 = (tmpvar_38 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_40;\n"
"tmpvar_40 = (tmpvar_39 + (texture2D (cTexSampler0, new_uv).w * 16.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_41;\n"
"tmpvar_41 = (tmpvar_40 + (texture2D (cTexSampler0, new_uv).w * 32.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_42;\n"
"tmpvar_42 = (tmpvar_41 + (texture2D (cTexSampler0, new_uv).w * 16.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_43;\n"
"tmpvar_43 = (tmpvar_42 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_44;\n"
"tmpvar_44 = (tmpvar_43 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (0.0 / sTextureSize.y));\n"
"float tmpvar_45;\n"
"tmpvar_45 = (tmpvar_44 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_46;\n"
"tmpvar_46 = (tmpvar_45 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_47;\n"
"tmpvar_47 = (tmpvar_46 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_48;\n"
"tmpvar_48 = (tmpvar_47 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_49;\n"
"tmpvar_49 = (tmpvar_48 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_50;\n"
"tmpvar_50 = (tmpvar_49 + (texture2D (cTexSampler0, new_uv).w * 16.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_51;\n"
"tmpvar_51 = (tmpvar_50 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_52;\n"
"tmpvar_52 = (tmpvar_51 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_53;\n"
"tmpvar_53 = (tmpvar_52 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (1.0/(sTextureSize.y)));\n"
"float tmpvar_54;\n"
"tmpvar_54 = (tmpvar_53 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_55;\n"
"tmpvar_55 = (tmpvar_54 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_56;\n"
"tmpvar_56 = (tmpvar_55 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_57;\n"
"tmpvar_57 = (tmpvar_56 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_58;\n"
"tmpvar_58 = (tmpvar_57 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_59;\n"
"tmpvar_59 = (tmpvar_58 + (texture2D (cTexSampler0, new_uv).w * 8.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_60;\n"
"tmpvar_60 = (tmpvar_59 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_61;\n"
"tmpvar_61 = (tmpvar_60 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_62;\n"
"tmpvar_62 = (tmpvar_61 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (2.0 / sTextureSize.y));\n"
"float tmpvar_63;\n"
"tmpvar_63 = (tmpvar_62 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_64;\n"
"tmpvar_64 = (tmpvar_63 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_65;\n"
"tmpvar_65 = (tmpvar_64 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_66;\n"
"tmpvar_66 = (tmpvar_65 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_67;\n"
"tmpvar_67 = (tmpvar_66 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_68;\n"
"tmpvar_68 = (tmpvar_67 + (texture2D (cTexSampler0, new_uv).w * 4.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_69;\n"
"tmpvar_69 = (tmpvar_68 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_70;\n"
"tmpvar_70 = (tmpvar_69 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_71;\n"
"tmpvar_71 = (tmpvar_70 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (3.0 / sTextureSize.y));\n"
"float tmpvar_72;\n"
"tmpvar_72 = (tmpvar_71 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (4.0 / sTextureSize.y));\n"
"float tmpvar_73;\n"
"tmpvar_73 = (tmpvar_72 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (4.0 / sTextureSize.y));\n"
"float tmpvar_74;\n"
"tmpvar_74 = (tmpvar_73 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (4.0 / sTextureSize.y));\n"
"float tmpvar_75;\n"
"tmpvar_75 = (tmpvar_74 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (-1.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (4.0 / sTextureSize.y));\n"
"float tmpvar_76;\n"
"tmpvar_76 = (tmpvar_75 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (0.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (4.0 / sTextureSize.y));\n"
"float tmpvar_77;\n"
"tmpvar_77 = (tmpvar_76 + (texture2D (cTexSampler0, new_uv).w * 2.0));\n"
"new_uv.x = (sUV.x + (1.0/(sTextureSize.x)));\n"
"new_uv.y = (sUV.y + (4.0 / sTextureSize.y));\n"
"float tmpvar_78;\n"
"tmpvar_78 = (tmpvar_77 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (2.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (4.0 / sTextureSize.y));\n"
"float tmpvar_79;\n"
"tmpvar_79 = (tmpvar_78 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (3.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (4.0 / sTextureSize.y));\n"
"float tmpvar_80;\n"
"tmpvar_80 = (tmpvar_79 + texture2D (cTexSampler0, new_uv).w);\n"
"new_uv.x = (sUV.x + (4.0 / sTextureSize.x));\n"
"new_uv.y = (sUV.y + (4.0 / sTextureSize.y));\n"
"vec4 tmpvar_81;\n"
"tmpvar_81.xyz = sBlurColor.xyz;\n"
"tmpvar_81.w = (((tmpvar_80 + texture2D (cTexSampler0, new_uv).w) * sBlurRate) / 280.0);\n"
"</Text>\n"
"<ReturnOp>tmpvar_81</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultGray_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sPrimColor\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sBlendColor\"/>\n"
"</Declaration>\n"
"<Functions>\n"
"<Function name=\"gray_color\">\n"
"<Ret precision=\"lowp\" type=\"vec4\" />\n"
"<Argument type=\"vec4\" name=\"tex_color\"/>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"float\" name=\"gray\" default_value=\"(tex_color.x + tex_color.y + tex_color.z) / 3.0\"/>\n"
"<Text>\n"
"return vec4(gray, gray, gray, tex_color.w);\n"
"</Text>\n"
"</Code>\n"
"</Function>\n"
"</Functions>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sPrimColor = cColor0;\n"
"sUV = cTexCoords0;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Declaration>\n"
"<Precision type=\"float\">lowp</Precision>\n"
"</Declaration>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec4\" name=\"tex_color\" default_value=\"texture2D(cTexSampler0, sUV)\"/>\n"
"<ReturnOp>gray_color(tex_color)</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultHighLight_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"uniform\" type=\"vec4\" name=\"cHighLightColor\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sPrimColor\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sHighLightColor\"/>\n"
"</Declaration>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sPrimColor = cColor0;\n"
"sHighLightColor = cHighLightColor;\n"
"sUV = cTexCoords0;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Code>\n"
"<ReturnOp>sPrimColor * texture2D(cTexSampler0, sUV) + sHighLightColor</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultOpaqueObjectDrawing_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader>\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sPrimColor\"/>\n"
"</Declaration>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sPrimColor = cColor0;\n"
"sUV = cTexCoords0;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec4\" name=\"tex_color\" default_value=\"texture2D(cTexSampler0, sUV)\"/>\n"
"<Text>\n"
"if ( tex_color.w &lt; 1.0 )\n"
"discard;\n"
"tex_color.xyzw *= sPrimColor.zyxw;\n"
"</Text>\n"
"<ReturnOp>tex_color</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultPrimitive_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sPrimColor\"/>\n"
"</Declaration>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sPrimColor = cColor0;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec4\" name=\"tmpvar_1\"/>\n"
"<Text>\n"
"tmpvar_1.xyz = sPrimColor.zyx;\n"
"tmpvar_1.w = sPrimColor.w;\n"
"</Text>\n"
"<ReturnOp>tmpvar_1</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

static const EGE::_chara* const cDefaultPrimitiveWithTex1_shader = 
"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n"
"<Shader version=\"1.2\">\n"
"<Declaration>\n"
"<Variable qualifier=\"uniform\" type=\"mat4\" name=\"rViewProjection\"/>\n"
"<Variable qualifier=\"uniform\" type=\"sampler2D\" name=\"cTexSampler0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cPosition\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec4\" name=\"cColor0\"/>\n"
"<Variable qualifier=\"attribute\" type=\"vec2\" name=\"cTexCoords0\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec2\" name=\"sUV\"/>\n"
"<Variable qualifier=\"varying\" precision=\"lowp\" type=\"vec4\" name=\"sPrimColor\"/>\n"
"</Declaration>\n"
"<VSMain>\n"
"<Code>\n"
"<Text>\n"
"sPrimColor = cColor0;\n"
"sUV = cTexCoords0;\n"
"</Text>\n"
"<ReturnOp>cPosition * rViewProjection</ReturnOp>\n"
"</Code>\n"
"</VSMain>\n"
"<PSMain>\n"
"<Code>\n"
"<Variable precision=\"lowp\" type=\"vec4\" name=\"tex_color\" default_value=\"texture2D(cTexSampler0, sUV)\"/>\n"
"<Text>\n"
"tex_color.xyzw *= sPrimColor.zyxw;\n"
"</Text>\n"
"<ReturnOp>tex_color</ReturnOp>\n"
"</Code>\n"
"</PSMain>\n"
"</Shader>\n"
;

